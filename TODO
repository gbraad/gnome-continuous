Highlevel stuff:

* Move apps into flatpak, unify buildsystems

* Re-parallelize treecompose

* State change (pass->fail, fail->pass) notification for installed tests

* SELinux tooling (and ideally a really basic policy); this would
  help demo the xattr support

* "ostbuild clone" - take a build directory (ideally while it's
  running), and efficiently clone it.  This will allow things like
  try servers and patch queue processing.

* Script build server install; basically make it trivial to spin up an
  EC2 instance with all this stuff.

* Improve QA web page: Allow browsing multiple builds, look at build
  diff, etc.  
  - Show test results for "session" type as a pie chart
    and allow diving into their stdout/stderr/associated core dumps etc.
  - Show "session-exclusive" type tests with the above, plus screenshots.
  - Export test tmpdir data from guest to host (e.g. gtk reftest images).

* Automatic reverse dependency rebuilds on soname bumps

Code internals:

* Use ccache

* Automatic task chaining - when resolve completes, run build.
  When build completes, run bdiff and builddisks.  Etc.

* Subtasks - allow parallelizing execution inside a task.  There
  are a few issues with this, but the biggest is what to do with
  task output?  We should probably have something like the systemd
  journal that logs output associated with a task, but allows a unified
  view of the output ordered by time.
